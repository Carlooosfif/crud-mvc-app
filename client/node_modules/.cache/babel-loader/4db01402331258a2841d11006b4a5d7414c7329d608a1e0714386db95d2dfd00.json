{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jwtDecode}from'jwt-decode';const AuthContext=/*#__PURE__*/createContext(null);export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const navigate=useNavigate();// Verificar token al cargar\nuseEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){try{const parsedUser=JSON.parse(storedUser);const decodedToken=jwtDecode(parsedUser.token);if(decodedToken.exp<Date.now()/1000){localStorage.removeItem('user');}else{setUser(parsedUser);}}catch(err){localStorage.removeItem('user');}}},[]);// Login\nconst login=async(email,password)=>{setLoading(true);setError(null);try{const response=await fetch('http://localhost:5000/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(!response.ok){throw new Error(data.message||'Error al iniciar sesión');}const userData=data.data;localStorage.setItem('user',JSON.stringify(userData));setUser(userData);// Redireccionar según rol\nif(userData.role==='admin'){navigate('/admin');}else{navigate('/dashboard');}}catch(err){setError(err.message);}finally{setLoading(false);}};// Register\nconst register=async(name,email,password,cedula)=>{setLoading(true);setError(null);try{const response=await fetch('http://localhost:5000/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,email,password,cedula})});const data=await response.json();if(!response.ok){throw new Error(data.message||'Error al registrar usuario');}const userData=data.data;localStorage.setItem('user',JSON.stringify(userData));setUser(userData);navigate('/dashboard');}catch(err){setError(err.message);}finally{setLoading(false);}};// Logout\nconst logout=()=>{localStorage.removeItem('user');setUser(null);navigate('/');};// Clear error\nconst clearError=()=>{setError(null);};// Check if user is admin\nconst isAdmin=()=>{return(user===null||user===void 0?void 0:user.role)==='admin';};const contextValue={user,loading,error,login,register,logout,clearError,isAdmin};return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:contextValue},children);}export function useAuth(){const context=useContext(AuthContext);if(!context){throw new Error('useAuth debe ser usado dentro de un AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jwtDecode","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","navigate","storedUser","localStorage","getItem","parsedUser","JSON","parse","decodedToken","token","exp","Date","now","removeItem","err","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","userData","setItem","role","register","name","cedula","logout","clearError","isAdmin","contextValue","createElement","Provider","value","useAuth","context"],"sources":["C:/Users/carlos.ochoa/Desktop/ING WEB 2025/crud-mvc-app/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { User } from '../models';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string, cedula: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n  isAdmin: () => boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Verificar token al cargar\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser) as User;\r\n        const decodedToken = jwtDecode<{exp: number}>(parsedUser.token);\r\n        \r\n        if (decodedToken.exp < Date.now() / 1000) {\r\n          localStorage.removeItem('user');\r\n        } else {\r\n          setUser(parsedUser);\r\n        }\r\n      } catch (err) {\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Login\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al iniciar sesión');\r\n      }\r\n      \r\n      const userData = data.data;\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      \r\n      // Redireccionar según rol\r\n      if (userData.role === 'admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register\r\n  const register = async (name: string, email: string, password: string, cedula: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password, cedula })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al registrar usuario');\r\n      }\r\n      \r\n      const userData = data.data;\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      navigate('/dashboard');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/');\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user?.role === 'admin';\r\n  };\r\n\r\n  const contextValue: AuthContextType = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n    isAdmin\r\n  };\r\n\r\n  return React.createElement(\r\n    AuthContext.Provider,\r\n    { value: contextValue },\r\n    children\r\n  );\r\n}\r\n\r\nexport function useAuth(): AuthContextType {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}