{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\n// Tipos\n\n// Crear contexto con un valor por defecto que coincida con el tipo\nconst defaultValue = {\n  user: null,\n  loading: false,\n  error: null,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  clearError: () => {}\n};\n\n// Crear el contexto\nconst AuthContext = /*#__PURE__*/createContext(defaultValue);\n\n// Proveedor de contexto\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Verificar token al cargar\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        const decodedToken = jwtDecode(parsedUser.token);\n        if (decodedToken.exp < Date.now() / 1000) {\n          localStorage.removeItem('user');\n        } else {\n          setUser(parsedUser);\n        }\n      } catch (err) {\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  // Login\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al iniciar sesión');\n      }\n      localStorage.setItem('user', JSON.stringify(data.data));\n      setUser(data.data);\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register\n  const register = async (name, email, password, cedula) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          cedula\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al registrar usuario');\n      }\n      localStorage.setItem('user', JSON.stringify(data.data));\n      setUser(data.data);\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Crear value object\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    clearError\n  };\n\n  // Usar una sintaxis JSX muy simple\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value\n  }, children);\n}\n\n// Hook para usar el contexto\n_s(AuthProvider, \"OehEcY2uC6SeZYRr5JsGBhoFpf8=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jwtDecode","defaultValue","user","loading","error","login","register","logout","clearError","AuthContext","AuthProvider","children","_s","setUser","setLoading","setError","navigate","storedUser","localStorage","getItem","parsedUser","JSON","parse","decodedToken","token","exp","Date","now","removeItem","err","email","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","setItem","name","cedula","value","createElement","Provider","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/carlos.ochoa/Desktop/ING WEB 2025/crud-mvc-app/client/src/context/AuthContext.ts"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n// Tipos\r\ninterface User {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  cedula: string;\r\n  role: string;\r\n  token: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string, cedula: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\n// Crear contexto con un valor por defecto que coincida con el tipo\r\nconst defaultValue: AuthContextType = {\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n  login: async () => {},\r\n  register: async () => {},\r\n  logout: () => {},\r\n  clearError: () => {}\r\n};\r\n\r\n// Crear el contexto\r\nconst AuthContext = createContext(defaultValue);\r\n\r\n// Proveedor de contexto\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Verificar token al cargar\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser) as User;\r\n        const decodedToken = jwtDecode<{exp: number}>(parsedUser.token);\r\n        \r\n        if (decodedToken.exp < Date.now() / 1000) {\r\n          localStorage.removeItem('user');\r\n        } else {\r\n          setUser(parsedUser);\r\n        }\r\n      } catch (err) {\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Login\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al iniciar sesión');\r\n      }\r\n      \r\n      localStorage.setItem('user', JSON.stringify(data.data));\r\n      setUser(data.data);\r\n      navigate('/');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register\r\n  const register = async (name: string, email: string, password: string, cedula: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password, cedula })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al registrar usuario');\r\n      }\r\n      \r\n      localStorage.setItem('user', JSON.stringify(data.data));\r\n      setUser(data.data);\r\n      navigate('/');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // Crear value object\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError\r\n  };\r\n\r\n  // Usar una sintaxis JSX muy simple\r\n  return React.createElement(\r\n    AuthContext.Provider,\r\n    { value },\r\n    children\r\n  );\r\n}\r\n\r\n// Hook para usar el contexto\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}