{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Verificar token al cargar\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        const decodedToken = jwtDecode(parsedUser.token);\n        if (decodedToken.exp < Date.now() / 1000) {\n          localStorage.removeItem('user');\n        } else {\n          setUser(parsedUser);\n        }\n      } catch (err) {\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  // Login\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al iniciar sesión');\n      }\n      const userData = data.data;\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n\n      // Redireccionar según rol\n      if (userData.role === 'admin') {\n        navigate('/admin');\n      } else {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register\n  const register = async (name, email, password, cedula) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          cedula\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al registrar usuario');\n      }\n      const userData = data.data;\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      navigate('/dashboard');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/');\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  const contextValue = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    clearError,\n    isAdmin\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextValue\n  }, children);\n}\n_s(AuthProvider, \"OehEcY2uC6SeZYRr5JsGBhoFpf8=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jwtDecode","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","storedUser","localStorage","getItem","parsedUser","JSON","parse","decodedToken","token","exp","Date","now","removeItem","err","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","userData","setItem","role","register","name","cedula","logout","clearError","isAdmin","contextValue","createElement","Provider","value","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/carlos.ochoa/Desktop/ING WEB 2025/crud-mvc-app/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { User } from '../models';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string, cedula: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n  isAdmin: () => boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Verificar token al cargar\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser) as User;\r\n        const decodedToken = jwtDecode<{exp: number}>(parsedUser.token);\r\n        \r\n        if (decodedToken.exp < Date.now() / 1000) {\r\n          localStorage.removeItem('user');\r\n        } else {\r\n          setUser(parsedUser);\r\n        }\r\n      } catch (err) {\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Login\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al iniciar sesión');\r\n      }\r\n      \r\n      const userData = data.data;\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      \r\n      // Redireccionar según rol\r\n      if (userData.role === 'admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register\r\n  const register = async (name: string, email: string, password: string, cedula: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password, cedula })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al registrar usuario');\r\n      }\r\n      \r\n      const userData = data.data;\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      navigate('/dashboard');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/');\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user?.role === 'admin';\r\n  };\r\n\r\n  const contextValue: AuthContextType = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n    isAdmin\r\n  };\r\n\r\n  return React.createElement(\r\n    AuthContext.Provider,\r\n    { value: contextValue },\r\n    children\r\n  );\r\n}\r\n\r\nexport function useAuth(): AuthContextType {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}