{"ast":null,"code":"import { api } from './api';\nexport const albumService = {\n  // Obtener todos los álbumes (público)\n  getAllAlbums: async () => {\n    const response = await api.get('/albums');\n    return response.data.data;\n  },\n  // Obtener álbum por ID con cartas (público)\n  getAlbumById: async id => {\n    const response = await api.get(`/albums/${id}`);\n    return response.data.data;\n  },\n  // Crear álbum (solo admin)\n  createAlbum: async album => {\n    const response = await api.post('/albums', album);\n    return response.data.data;\n  },\n  // Actualizar álbum (solo admin)\n  updateAlbum: async (id, album) => {\n    const response = await api.put(`/albums/${id}`, album);\n    return response.data.data;\n  },\n  // Eliminar álbum (solo admin)\n  deleteAlbum: async id => {\n    await api.delete(`/albums/${id}`);\n  }\n};","map":{"version":3,"names":["api","albumService","getAllAlbums","response","get","data","getAlbumById","id","createAlbum","album","post","updateAlbum","put","deleteAlbum","delete"],"sources":["C:/Users/carlos.ochoa/Desktop/ING WEB 2025/crud-mvc-app/client/src/services/albumService.ts"],"sourcesContent":["import { api } from './api';\r\nimport { Album, ApiResponse } from '../models';\r\n\r\nexport const albumService = {\r\n  // Obtener todos los álbumes (público)\r\n  getAllAlbums: async (): Promise<Album[]> => {\r\n    const response = await api.get<ApiResponse<Album[]>>('/albums');\r\n    return response.data.data;\r\n  },\r\n\r\n  // Obtener álbum por ID con cartas (público)\r\n  getAlbumById: async (id: number): Promise<Album> => {\r\n    const response = await api.get<ApiResponse<Album>>(`/albums/${id}`);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Crear álbum (solo admin)\r\n  createAlbum: async (album: Partial<Album>): Promise<Album> => {\r\n    const response = await api.post<ApiResponse<Album>>('/albums', album);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Actualizar álbum (solo admin)\r\n  updateAlbum: async (id: number, album: Partial<Album>): Promise<Album> => {\r\n    const response = await api.put<ApiResponse<Album>>(`/albums/${id}`, album);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Eliminar álbum (solo admin)\r\n  deleteAlbum: async (id: number): Promise<void> => {\r\n    await api.delete(`/albums/${id}`);\r\n  },\r\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAG3B,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,YAAY,EAAE,MAAAA,CAAA,KAA8B;IAC1C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAuB,SAAS,CAAC;IAC/D,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAC,YAAY,EAAE,MAAOC,EAAU,IAAqB;IAClD,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAqB,WAAWG,EAAE,EAAE,CAAC;IACnE,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAG,WAAW,EAAE,MAAOC,KAAqB,IAAqB;IAC5D,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAqB,SAAS,EAAED,KAAK,CAAC;IACrE,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAM,WAAW,EAAE,MAAAA,CAAOJ,EAAU,EAAEE,KAAqB,KAAqB;IACxE,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACY,GAAG,CAAqB,WAAWL,EAAE,EAAE,EAAEE,KAAK,CAAC;IAC1E,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAQ,WAAW,EAAE,MAAON,EAAU,IAAoB;IAChD,MAAMP,GAAG,CAACc,MAAM,CAAC,WAAWP,EAAE,EAAE,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}