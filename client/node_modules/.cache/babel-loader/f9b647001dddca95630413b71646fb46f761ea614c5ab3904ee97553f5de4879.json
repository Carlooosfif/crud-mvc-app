{"ast":null,"code":"import{api}from'./api';export const albumService={// Obtener todos los álbumes (público)\ngetAllAlbums:async()=>{const response=await api.get('/albums');return response.data.data;},// Obtener álbum por ID con cartas (público)\ngetAlbumById:async id=>{const response=await api.get(`/albums/${id}`);return response.data.data;},// Crear álbum (solo admin)\ncreateAlbum:async album=>{const response=await api.post('/albums',album);return response.data.data;},// Actualizar álbum (solo admin)\nupdateAlbum:async(id,album)=>{const response=await api.put(`/albums/${id}`,album);return response.data.data;},// Eliminar álbum (solo admin)\ndeleteAlbum:async id=>{await api.delete(`/albums/${id}`);}};","map":{"version":3,"names":["api","albumService","getAllAlbums","response","get","data","getAlbumById","id","createAlbum","album","post","updateAlbum","put","deleteAlbum","delete"],"sources":["C:/Users/carlos.ochoa/Desktop/ING WEB 2025/crud-mvc-app/client/src/services/albumService.ts"],"sourcesContent":["import { api } from './api';\r\nimport { Album, ApiResponse } from '../models';\r\n\r\nexport const albumService = {\r\n  // Obtener todos los álbumes (público)\r\n  getAllAlbums: async (): Promise<Album[]> => {\r\n    const response = await api.get<ApiResponse<Album[]>>('/albums');\r\n    return response.data.data;\r\n  },\r\n\r\n  // Obtener álbum por ID con cartas (público)\r\n  getAlbumById: async (id: number): Promise<Album> => {\r\n    const response = await api.get<ApiResponse<Album>>(`/albums/${id}`);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Crear álbum (solo admin)\r\n  createAlbum: async (album: Partial<Album>): Promise<Album> => {\r\n    const response = await api.post<ApiResponse<Album>>('/albums', album);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Actualizar álbum (solo admin)\r\n  updateAlbum: async (id: number, album: Partial<Album>): Promise<Album> => {\r\n    const response = await api.put<ApiResponse<Album>>(`/albums/${id}`, album);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Eliminar álbum (solo admin)\r\n  deleteAlbum: async (id: number): Promise<void> => {\r\n    await api.delete(`/albums/${id}`);\r\n  },\r\n};"],"mappings":"AAAA,OAASA,GAAG,KAAQ,OAAO,CAG3B,MAAO,MAAM,CAAAC,YAAY,CAAG,CAC1B;AACAC,YAAY,CAAE,KAAAA,CAAA,GAA8B,CAC1C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAuB,SAAS,CAAC,CAC/D,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAC,YAAY,CAAE,KAAO,CAAAC,EAAU,EAAqB,CAClD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAqB,WAAWG,EAAE,EAAE,CAAC,CACnE,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAG,WAAW,CAAE,KAAO,CAAAC,KAAqB,EAAqB,CAC5D,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACU,IAAI,CAAqB,SAAS,CAAED,KAAK,CAAC,CACrE,MAAO,CAAAN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAM,WAAW,CAAE,KAAAA,CAAOJ,EAAU,CAAEE,KAAqB,GAAqB,CACxE,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACY,GAAG,CAAqB,WAAWL,EAAE,EAAE,CAAEE,KAAK,CAAC,CAC1E,MAAO,CAAAN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAQ,WAAW,CAAE,KAAO,CAAAN,EAAU,EAAoB,CAChD,KAAM,CAAAP,GAAG,CAACc,MAAM,CAAC,WAAWP,EAAE,EAAE,CAAC,CACnC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}