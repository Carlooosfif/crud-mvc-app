{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requireAdmin=false}=_ref;const{user,isAdmin}=useAuth();console.log('ProtectedRoute - Usuario:',user);// Debug\nconsole.log('ProtectedRoute - Requiere admin:',requireAdmin);// Debug\nconsole.log('ProtectedRoute - Es admin:',isAdmin());// Debug\nif(!user){console.log('ProtectedRoute - No hay usuario, redirigiendo a login');// Debug\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(requireAdmin&&!isAdmin()){console.log('ProtectedRoute - No es admin, redirigiendo a dashboard');// Debug\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});}console.log('ProtectedRoute - Acceso permitido');// Debug\nreturn/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","requireAdmin","user","isAdmin","console","log","to","replace"],"sources":["C:/Users/carlos.ochoa/Desktop/ING WEB 2025/crud-mvc-app/client/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requireAdmin?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, requireAdmin = false }) => {\r\n  const { user, isAdmin } = useAuth();\r\n\r\n  console.log('ProtectedRoute - Usuario:', user); // Debug\r\n  console.log('ProtectedRoute - Requiere admin:', requireAdmin); // Debug\r\n  console.log('ProtectedRoute - Es admin:', isAdmin()); // Debug\r\n\r\n  if (!user) {\r\n    console.log('ProtectedRoute - No hay usuario, redirigiendo a login'); // Debug\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (requireAdmin && !isAdmin()) {\r\n    console.log('ProtectedRoute - No es admin, redirigiendo a dashboard'); // Debug\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  console.log('ProtectedRoute - Acceso permitido'); // Debug\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAOjD,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,QAAQ,CAAEC,YAAY,CAAG,KAAM,CAAC,CAAAF,IAAA,CACvF,KAAM,CAAEG,IAAI,CAAEC,OAAQ,CAAC,CAAGV,OAAO,CAAC,CAAC,CAEnCW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEH,IAAI,CAAC,CAAE;AAChDE,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEJ,YAAY,CAAC,CAAE;AAC/DG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,OAAO,CAAC,CAAC,CAAC,CAAE;AAEtD,GAAI,CAACD,IAAI,CAAE,CACTE,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC,CAAE;AACtE,mBAAOV,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIN,YAAY,EAAI,CAACE,OAAO,CAAC,CAAC,CAAE,CAC9BC,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC,CAAE;AACvE,mBAAOV,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CAC7C,CAEAH,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAAE;AAClD,mBAAOV,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}